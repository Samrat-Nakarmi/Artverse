// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// user model
model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  username  String    
  email     String    @unique
  password  String      
  posts     Post[]
  profile   Profile?
  likes     Like[]
  comments  Comment[]
  // followers Follow[] @relation("UserFollows", references: [id])
  // following Follow[] @relation("UserFollowing")
}

// post model
model Post {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @db.ObjectId
  likes     Like[]
  comments  Comment[]
}

// profile model
model Profile {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  bio     String
  user    User   @relation(fields: [userId], references: [id])
  userId  String    @unique @db.ObjectId
}

// like model
model Like {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  user    User   @relation(fields: [userId], references: [id])
  userId  String @db.ObjectId
  post    Post   @relation(fields: [postId], references: [id])
  postId  String @db.ObjectId
}

// comment model
model Comment {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  text    String
  user    User   @relation(fields: [userId], references: [id])
  userId  String @db.ObjectId 
  post    Post   @relation(fields: [postId], references: [id])
  postId  String @db.ObjectId
}

// follow model
// model Follow {
//   id          String    @id @default(auto()) @map("_id") @db.ObjectId
//   follower    User   @relation("UserFollows", fields: [followerId], references: [id])
//   followerId  String
//   following   User   @relation("UserFollowing", fields: [followingId], references: [id])
//   followingId String

//   @@map("follows")
// }
